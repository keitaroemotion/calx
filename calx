#!/usr/bin/env ruby

require 'colorize'
require 'date'

COMMON_YEAR_DAYS_IN_MONTH = [nil, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

def days_in_month(month, year = Time.now.year)
   return 29 if month == 2 && Date.gregorian_leap?(year)
   COMMON_YEAR_DAYS_IN_MONTH[month]
end


d = DateTime.now

haec_annus = d.year
haec_mensis = d.month

haec_uno_dies = DateTime.new(haec_annus,haec_mensis,1).wday

["Su","Mo","Tu","We","Th","Fr","Sa"].each { |dow|
  printf dow+" "
}
puts

(1.. haec_uno_dies).each {
  printf "   "
}

(1..days_in_month(haec_mensis, haec_annus)).each { |dies|
  diesprop = DateTime.new(haec_annus,haec_mensis,dies)
  if diesprop.wday == 0
    puts
  end
  vdies = dies.to_s
  if (dies < 10)
    vdies = " "+vdies
  end
  if diesprop.day == d.day
    printf (vdies+" ").red
  else
    printf vdies+" "
  end
}

puts

